events {
  worker_connections  4096;  ## Default: 1024
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] :$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;
    server {
        listen       8080;
        server_name  _;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;

        client_max_body_size 128M;
        proxy_max_temp_file_size 0;
        proxy_buffering off;
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types text/plain text/css application/json     application/x-javascript text/xml application/xml     application/xml+rss text/javascript application/vnd    .ms-fontobject application/x-font-ttf font/opentype     image/svg+xml image/x-icon;

        error_page  404              /404.html;

        # redirect server error pages to the static page     /50x.html
        #
        error_page   500 502 503 504  /50x.html;

        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /code/ {
            proxy_pass http://192.168.28.220:12345/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 解决 WebSocket 支持问题
            proxy_set_header Origin "";
        }

        location ^~ /api/v1 {
            proxy_pass  http://app:8080;
            rewrite "^/api/v1/(.*)$" /$1 break;
        }

        location ^~ /api/v1/ws_get_job_log {
            proxy_pass  http://app:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            rewrite "^/api/v1/(.*)$" /$1 break;
        }

        location ^~ /api/m/v1 {
            proxy_pass  http://app:8080;
            rewrite "^/api/m/v1/(.*)$" /$1 break;
        }

        location ^~ /tensorboard {
            proxy_pass  http://app:8080;
#             rewrite "^/api/v1/(.*)$" /$1 break;
        }

        location ^~ /cdn {
            proxy_pass  http://app:8080;
            rewrite "^/cdn/(.*)$" /$1 break;
        }

        location / {
    	    try_files $uri $uri/ index.html =404;
            alias   /usr/share/nginx/html/;
            index  index.html index.htm;
        }
    }
}
